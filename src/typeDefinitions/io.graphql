type io {
  id: String!
  timestamp: GraphQLDateTime!
  client: Client!
  createdBy: User!
  attribution: String!
  campaignName: String!
  campaignDescription: String!
  programPhase: IO_PROGRAM_PHASE_ENUM!
  commissionRate: Float!
  lineItems: [ioLineItem]
  revisionHistory: [ioRevision]
}

type ioRevision {
  revisionId: Int!
  timestamp: GraphQLDateTime!
  id: String!
  client: Client!
  createdBy: User!
  attribution: String!
  campaignName: String!
  campaignDescription: String!
  programPhase: IO_PROGRAM_PHASE_ENUM!
  commissionRate: Float!
}

type ioLineItem {
  id: String!
  io: io!
  timestamp: GraphQLDateTime!
  category: IO_LI_CATEGORY!
  platform: IO_LI_PLATFORM_ENUM!
  objective: IO_LI_OBJECTIVE_ENUM!
  activeDateBegin: GraphQLDate
  activeDateEnd: GraphQLDate
  costGross: Float!
  costNet: Float!
  commissionRate: Float!
  createdBy: User!
  revisionHistory: [ioLineItemRevision]
}

type ioLineItemRevision {
  revisionId: Int!
  timestamp: GraphQLDateTime!
  id: String!
  io: io!
  category: IO_LI_CATEGORY!
  platform: IO_LI_PLATFORM_ENUM!
  objective: IO_LI_OBJECTIVE_ENUM!
  activeDateBegin: GraphQLDate
  activeDateEnd: GraphQLDate
  costGross: Float!
  costNet: Float!
  commissionRate: Float!
  createdBy: User!
}

input CreateIOInput {
  # the IO order number
  id: String!
  # the client to whom this IO belongs
  clientId: String!
  # the initials / abbreviation of the GPS project lead
  attribution: String!
  campaignName: String!
  campaignDescription: String!
  programPhase: IO_PROGRAM_PHASE_ENUM!
  commissionRate: Float! = 0.15
}

type CreateIOResult {
  code: MutationCodeEnum!
  success: Boolean!
  message: String!
  item: io!
}

input UpdateIOInput {
  # the client to whom this IO belongs
  clientId: String
  # UserId of who created this revision
  createdBy: String
  # the initials / abbreviation of the GPS project lead
  attribution: String
  campaignName: String
  campaignDescription: String
  programPhase: IO_PROGRAM_PHASE_ENUM
  commissionRate: Float
}

type UpdateIOResult {
  code: MutationCodeEnum!
  success: Boolean!
  message: String!
  item: io!
}

input IOsInput {
  where: IOsWhere
  limit: Int
  offset: Int
  sort: IOSort
}

input IOsWhere {
  OR: [IOsWhere]
  AND: [IOsWhere]
  id: StringWhere
  timestamp: StringWhere
  clientId: StringWhere
  createdBy: StringWhere
  attribution: StringWhere
  campaignName: StringWhere
  campaignDescription: StringWhere
  programPhase: StringWhere
}

type IOsResults {
  hasMore: Boolean!
  totalCount: Int!
  items: [io]!
}

input IOSort {
  id: SortDirection
  timestamp: SortDirection
  clientId: SortDirection
  createdBy: SortDirection
  attribution: SortDirection
  campaignName: SortDirection
  campaignDescription: SortDirection
  programPhase: SortDirection
}

input CreateIOLineItemInput {
  insertionOrderId: String!
  category: IO_LI_CATEGORY!
  platform: IO_LI_PLATFORM_ENUM!
  objective: IO_LI_OBJECTIVE_ENUM!
  activeDateBegin: GraphQLDate
  activeDateEnd: GraphQLDate
  costGross: Float!
  costNet: Float!
  commissionRate: Float!
}

type CreateIOLineItemResult {
  code: MutationCodeEnum!
  success: Boolean!
  message: String!
  item: ioLineItem!
}

input UpdateIOLineItemInput {
  category: IO_LI_CATEGORY
  platform: IO_LI_PLATFORM_ENUM
  objective: IO_LI_OBJECTIVE_ENUM
  activeDateBegin: GraphQLDate
  activeDateEnd: GraphQLDate
  costGross: Float
  costNet: Float
  commissionRate: Float
}

type UpdateIOLineItemResult {
  code: MutationCodeEnum!
  success: Boolean!
  message: String!
  item: ioLineItem!
}
